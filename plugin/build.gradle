plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

android {
    compileSdk 30

    defaultConfig {
        minSdk 21
        targetSdk 30
        consumerProguardFiles "consumer-rules.pro"
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 指定 AAR 输出目录
    libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "yuedong_plugin.aar"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    dexOptions {
//        incremental true
//    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    api 'androidx.multidex:multidex:2.0.0'
    api "com.squareup.okhttp3:okhttp:3.14.9"
    api "com.getkeepsafe.relinker:relinker:1.4.4"
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'com.google.code.gson:gson:2.8.8'
    api 'com.github.bumptech.glide:glide:4.12.0'
//    api 'com.yuedong.plugin:beautysdk:3.7.5'
//    implementation 'com.github.494739635:YueDongPlugin:git_hub-37e83ddbb7-1'
    api 'com.tencent.liteav:LiteAVSDK_Professional:latest.release'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
}


publishing {
    publications {
        release(MavenPublication) {
            groupId = '494739635' // GitHub用户名
            artifactId = 'YueDongPlugin' // 仓库名
            version = '0.0.2' // 版本号

            // 指定要发布的 AAR 文件
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
        }
    }

    repositories {
        mavenLocal() // 启用本地 Maven 仓库
        // 如果需要发布到其他仓库，添加相应的仓库配置
    }
}
